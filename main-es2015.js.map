{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-comment/add-comment.component.ts","./src/app/add-comment/add-comment.component.html","./src/app/add-score/add-score.component.ts","./src/app/add-score/add-score.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authenticate.service.ts","./src/app/book-search/book-search.component.ts","./src/app/book-search/book-search.component.html","./src/app/data.service.ts","./src/app/edit-comment/edit-comment.component.ts","./src/app/edit-comment/edit-comment.component.html","./src/app/edit-score/edit-score.component.ts","./src/app/edit-score/edit-score.component.html","./src/app/favourite-details/favourite-details.component.ts","./src/app/favourite-details/favourite-details.component.html","./src/app/favourite-view/favourite-view.component.ts","./src/app/favourite-view/favourite-view.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/navbar.service.ts","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/web-request.interceptor.ts","./src/app/web-request.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Params, Router} from '@angular/router';\nimport { Favourite } from 'src/app/models/favourite.model';\nimport { BookComment } from 'src/app/models/bookComment.model';\n\n@Component({\n  selector: 'app-add-comment',\n  templateUrl: './add-comment.component.html',\n  styleUrls: ['./add-comment.component.scss']\n})\nexport class AddCommentComponent implements OnInit {\n  favouriteId: string;\n\n  constructor(private data: DataService, private route: ActivatedRoute, private router: Router) { }\n\n  \n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.favouriteId = params.favouriteId;\n      }\n    )\n    console.log(this.favouriteId);\n  }\n\n  addComment(comment: string){\n\n    this.data.addComment(comment, this.favouriteId).subscribe((newBookComment: BookComment) => {\n      console.log(newBookComment);\n      this.router.navigate(['../'], { relativeTo: this.route});\n\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Add Comment\n\n        </h1>\n\n        <input #CommentInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter comment...\">\n\n        <br><br>\n\n        <div class=\"buttons is-right\" >\n            \n            <button class=\"button is-medium\" [routerLink]=\"['/favouriteView', favouriteId]\">Cancel</button>\n            <button class=\"button is-primary has-text-white is-medium\" (click)=\"addComment(CommentInput.value)\">Add</button>\n\n        </div>\n\n        \n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Params, Router} from '@angular/router';\nimport { Favourite } from 'src/app/models/favourite.model';\nimport { BookScore } from 'src/app/models/bookScore.model';\n\n@Component({\n  selector: 'app-add-score',\n  templateUrl: './add-score.component.html',\n  styleUrls: ['./add-score.component.scss']\n})\nexport class AddScoreComponent implements OnInit {\n\n  favouriteId: string;\n\n  constructor(private data: DataService, private route: ActivatedRoute, private router: Router) { }\n\n  \n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.favouriteId = params.favouriteId;\n      }\n    )\n    console.log(this.favouriteId);\n  }\n\n  addScore(score: number){\n\n    this.data.addScore(score, this.favouriteId).subscribe((newBookScore: BookScore) => {\n      console.log(newBookScore);\n      this.router.navigate(['../'], { relativeTo: this.route});\n\n    })\n  }\n\n}","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Add Score\n\n        </h1>\n\n        <div class=\"field\">\n            <div class=\"control\">\n              <div class=\"select is-large \">\n                <select #ScoreInput >\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                </select>\n              </div>\n            </div>\n          </div>\n   \n\n        <br><br>\n\n        <div class=\"buttons is-right\" >\n            \n            <button class=\"button is-medium\" >Cancel</button>\n            <button class=\"button is-primary has-text-white is-medium\" (click)=\"addScore(ScoreInput.value)\">Add</button>\n\n        </div>\n\n        \n\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookSearchComponent} from './book-search/book-search.component';\nimport { FavouriteViewComponent} from './favourite-view/favourite-view.component';\nimport { FavouriteDetailsComponent} from './favourite-details/favourite-details.component';\nimport { AddCommentComponent} from './add-comment/add-comment.component';\nimport { EditCommentComponent} from './edit-comment/edit-comment.component';\nimport { AddScoreComponent} from './add-score/add-score.component';\nimport { EditScoreComponent} from './edit-score/edit-score.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { WebRequestInterceptor } from './web-request.interceptor';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/bookSearch', pathMatch: 'full' },\n  { path: 'bookSearch', component:BookSearchComponent },\n  { path: 'favouriteView', component:FavouriteViewComponent },\n  { path: 'favouriteView/:favouriteId', component:FavouriteDetailsComponent },\n  { path: 'favouriteView/:favouriteId/addComment', component:AddCommentComponent },\n  { path: 'favouriteView/:favouriteId/editComment/:commentId', component:EditCommentComponent},\n  { path: 'favouriteView/:favouriteId/addScore', component:AddScoreComponent },\n  { path: 'favouriteView/:favouriteId/editScore/:bookScoreId', component:EditScoreComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component: RegistrationComponent},\n  \n \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FavouriteViewComponent } from './favourite-view/favourite-view.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavbarService } from './navbar.service';\nimport { AuthenticateService } from 'src/app/authenticate.service';\n \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'bookFrontEnd';\n\n  links: Array<{ text: string, path: string }>;\n  isLoggedIn = false;\n \n  constructor(private authenticateService: AuthenticateService, private router: Router, private navbarService: NavbarService) {\n    this.router.config.unshift(\n      { path: 'login', component: LoginComponent },\n      { path: 'favouriteView', component: FavouriteViewComponent },\n    );\n  }\n \n  ngOnInit() {\n    this.links = this.navbarService.getLinks();\n    this.navbarService.getLoginStatus().subscribe(status => this.isLoggedIn = status);\n  }\n \n  logout() {\n    this.navbarService.updateLoginStatus(false);\n    this.authenticateService.logoutOnClick();\n  }\n}\n"," <header>\n\n    <nav class=\"breadcrumb is-centered\" aria-label=\"breadcrumbs\">\n        <ul routerLinkActive=\"active\">\n            <li ><a class=\"nav-link\" routerLink=\"/\">Home</a></li>\n            <li  *ngFor=\"let link of links\">\n              <a [routerLink]=\"link.path\">{{ link.text }}</a>\n            </li>\n            <li *ngIf=\"isLoggedIn\">\n              <a routerLink=\"/favouriteView\">My Favourite</a>\n              <a (click)=\"logout()\">Logout</a>\n            </li>\n          </ul>\n      </nav>\n  </header>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BookSearchComponent } from './book-search/book-search.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FavouriteViewComponent } from './favourite-view/favourite-view.component';\nimport { FavouriteDetailsComponent } from './favourite-details/favourite-details.component';\nimport { AddCommentComponent } from './add-comment/add-comment.component';\nimport { EditCommentComponent } from './edit-comment/edit-comment.component';\nimport { AddScoreComponent } from './add-score/add-score.component';\nimport { EditScoreComponent } from './edit-score/edit-score.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { WebRequestInterceptor } from './web-request.interceptor';\nimport { NavComponent } from './nav/nav.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookSearchComponent,\n    FavouriteViewComponent,\n    FavouriteDetailsComponent,\n    AddCommentComponent,\n    EditCommentComponent,\n    AddScoreComponent,\n    EditScoreComponent,\n    LoginComponent,\n    RegistrationComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  entryComponents: [\n    LoginComponent,\n    FavouriteViewComponent\n  ],\n  providers: [ \n    { provide: HTTP_INTERCEPTORS, useClass: WebRequestInterceptor, multi: true }\n   ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { WebRequestService } from './web-request.service';\nimport { Router } from '@angular/router';\nimport { shareReplay, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n\n  constructor(private webRequestService: WebRequestService, private router: Router, private http: HttpClient) { }\n\n  login(email: string, password: string) {\n    return this.webRequestService.login(email, password).pipe(\n      shareReplay(),\n      tap((res: HttpResponse<any>) => {\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\n        console.log(\"LOGGED IN!\");\n        //this.router.navigate(['/']);\n      })\n    )\n  }\n\n  logout() {\n    this.removeSession();\n\n    this.router.navigate(['/login']);\n  }\n\n  logoutOnClick(){\n    this.removeSession();\n\n    this.router.navigate(['/']);\n  }\n\n  getUserId() {\n    return localStorage.getItem('user-id');\n  }\n\n  hasLogin(){\n    if(localStorage.getItem('user-id')){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n\n  getRefreshToken() {\n    return localStorage.getItem('x-refresh-token');\n  }\n\n  getAccessToken() {\n    return localStorage.getItem('x-access-token');\n  }\n\n\n  setAccessToken(accessToken: string) {\n    localStorage.setItem('x-access-token', accessToken)\n  }\n\n  private setSession(userId: string, accessToken: string, refreshToken: string) {\n    localStorage.setItem('user-id', userId);\n    localStorage.setItem('x-access-token', accessToken);\n    localStorage.setItem('x-refresh-token', refreshToken);\n  }\n\n  private removeSession() {\n    localStorage.removeItem('user-id');\n    localStorage.removeItem('x-access-token');\n    localStorage.removeItem('x-refresh-token');\n  }\n\n  getNewAccessToken() {\n    return this.http.get(`${this.webRequestService.ROOT_URL}/users/me/access-token`, {\n      headers: {\n        'x-refresh-token': this.getRefreshToken(),\n        '_id': this.getUserId()\n      },\n      observe: 'response'\n    }).pipe(\n      tap((res: HttpResponse<any>) => {\n        this.setAccessToken(res.headers.get('x-access-token'));\n      })\n    )\n  }\n\n  register(email: string, password: string) {\n    return this.webRequestService.register(email, password).pipe(\n      shareReplay(),\n      tap((res: HttpResponse<any>) => {\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\n        console.log(\"Successfully signed up and now logged in!\");\n      })\n    )\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Params, Router} from '@angular/router';\nimport { Favourite } from 'src/app/models/favourite.model';\n\n@Component({\n  selector: 'app-book-search',\n  templateUrl: './book-search.component.html',\n  styleUrls: ['./book-search.component.scss']\n})\nexport class BookSearchComponent implements OnInit {\n  favourite: Favourite[];\n\n  books: Object;\n\n  constructor(private data: DataService, private route:ActivatedRoute, private router: Router) { }\n  \n  ngOnInit(): void {\n    \n  }\n\n  addSearch(newSearch: string) {\n    if (newSearch != '') {\n      this.data.get(`${newSearch}`).subscribe(data => {\n\n        this.books = data;\n      })\n    }\n  }\n\n  addFavourite(bid: string, title: string, description: string){\n    //console.log(bid+\", \"+title+\", \"+authors+\", \"+description);\n    this.data.addFavourite(bid, title, description).subscribe((favourite: Favourite) => {\n      console.log(favourite);\n    });\n  }\n\n  \n\n}\n","<p>book-search works!</p>\n<div>\n    <input #newSearch (keyup.enter)=\"addSearch(newSearch.value)\"\n        (blur)=\"addSearch(newSearch.value); newSearch.value='' \">\n\n    <button (click)=\"addSearch(newSearch.value)\">Search</button>\n    <ul *ngIf=\"books\">\n        <li *ngFor=\"let book of books; index as i\">\n            <h3>{{ book.title }} <button (click)=\"addFavourite(book.id, book.title, book.description)\"> Add to Favourites</button></h3>\n            <p>{{ book.description}} </p>\n            <br>\n            <br>\n            <br>\n        </li>\n    </ul>\n</div>","import { Injectable } from '@angular/core';\n\nimport { WebRequestService } from './web-request.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private webRequestService:WebRequestService) { }\n\n\n  get(title: string) {\n    return this.webRequestService.get(`bookSearch?q=${title}`);\n  }\n\n  addFavourite(bid:string, title:string, description:string) {\n\n    return this.webRequestService.post(`favourite`, {bid, title, description});\n  }\n\n  getFavourite(){\n    return this.webRequestService.getFavoutite(`favourite`);\n  }\n\n  getFavouriteDetails(id: string){\n    return this.webRequestService.getFavoutite(`favourite/${id}`);\n  }\n\n  deleteFavourite(id: string){\n    return this.webRequestService.deleteFavoutite(`favourite/${id}`);\n  }\n\n  addComment(comment: string, id: string){\n    return this.webRequestService.addComment(`favourite/${id}/comment`, {comment});\n  }\n\n  getComment(id: string){\n    return this.webRequestService.getComment(`favourite/${id}/comment`);\n  }\n\n  deleteComment(id: string, commentId: string){\n    return this.webRequestService.deleteComment(`favourite/${id}/comment/${commentId}`);\n  }\n\n  updateComment(id: string, commentId: string, comment: string){\n    return this.webRequestService.updateComment(`favourite/${id}/comment/${commentId}`, {comment});\n  }\n\n  addScore(score: number, id: string){\n    return this.webRequestService.addScore(`favourite/${id}/bookScore`, {score});\n  }\n\n  getScore(id: string){\n    return this.webRequestService.getScore(`favourite/${id}/bookScore`);\n  }\n\n  deleteScore(id: string, bookScoreId: string){\n    return this.webRequestService.deleteScore(`favourite/${id}/bookScore/${bookScoreId}`);\n  }\n\n  updateScore(id: string, bookScoreId: string, score: number){\n    return this.webRequestService.updateScore(`favourite/${id}/bookScore/${bookScoreId}`, {score});\n  }\n\n  \n\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-edit-comment',\n  templateUrl: './edit-comment.component.html',\n  styleUrls: ['./edit-comment.component.scss']\n})\nexport class EditCommentComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private data: DataService, private router: Router) { }\n\n  favouriteId: string;\n  commentId: string;\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n          this.favouriteId = params.favouriteId;  \n          this.commentId = params.commentId; \n      }\n    )\n  }\n\n  updateComment(comment: string){\n\n    console.log(this.favouriteId);\n    console.log(this.commentId);\n    console.log(comment);\n\n    this.data.updateComment(this.favouriteId, this.commentId, comment).subscribe(() => {\n      this.router.navigate(['/favouriteView', this.favouriteId]);\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Edit Comment\n\n        </h1>\n\n        <input #CommentInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter comment...\">\n\n        <br><br>\n\n        <div class=\"buttons is-right\" >\n            \n            <button class=\"button is-medium\" [routerLink]=\"['/favouriteView', favouriteId]\">Cancel</button>\n            <button class=\"button is-primary has-text-white is-medium\" (click)=\"updateComment(CommentInput.value)\">Edit</button>\n\n        </div>\n\n        \n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-edit-score',\n  templateUrl: './edit-score.component.html',\n  styleUrls: ['./edit-score.component.scss']\n})\nexport class EditScoreComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private data: DataService, private router: Router) { }\n\n  favouriteId: string;\n  bookScoreId: string;\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n          this.favouriteId = params.favouriteId;  \n          this.bookScoreId = params.bookScoreId; \n      }\n    )\n  }\n\n  updateScore(score: number){\n\n    console.log(this.favouriteId);\n    console.log(this.bookScoreId);\n    console.log(score);\n\n    this.data.updateScore(this.favouriteId, this.bookScoreId, score).subscribe(() => {\n      this.router.navigate(['/favouriteView', this.favouriteId]);\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Edit Score\n\n        </h1>\n\n        <div class=\"field\">\n            <div class=\"control\">\n              <div class=\"select is-large \">\n                <select #ScoreInput >\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                </select>\n              </div>\n            </div>\n          </div>\n   \n\n        <br><br>\n\n        <div class=\"buttons is-right\" >\n            \n            <button class=\"button is-medium\" [routerLink]=\"['/favouriteView', favouriteId]\">Cancel</button>\n            <button class=\"button is-primary has-text-white is-medium\" (click)=\"updateScore(ScoreInput.value)\">Update</button>\n\n        </div>\n\n        \n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Favourite } from 'src/app/models/favourite.model';\nimport { BookComment } from 'src/app/models/bookComment.model';\nimport { BookScore } from 'src/app/models/bookScore.model';\n\n@Component({\n  selector: 'app-favourite-details',\n  templateUrl: './favourite-details.component.html',\n  styleUrls: ['./favourite-details.component.scss']\n})\nexport class FavouriteDetailsComponent implements OnInit {\n\n  favourites: Favourite[];\n  selectedFavouriteId: string;\n  comments: BookComment[];\n  scores: BookScore[];\n  hasComment: boolean;\n  hasScore: boolean;\n\n\n  constructor(private data: DataService, private route: ActivatedRoute, private router: Router) { }\n\n  favouriteId: string\n\n\n  ngOnInit(): void {\n    this.hasComment = false;\n    this.hasScore = false;\n    this.route.params.subscribe(\n      (params: Params) => {\n\n        this.selectedFavouriteId = params.favouriteId;\n        console.log(this.selectedFavouriteId);\n        this.data.getFavouriteDetails(this.selectedFavouriteId).subscribe((favourite: Favourite[]) => {\n          this.favourites = favourite;\n          console.log(this.favourites);\n        })\n\n        this.data.getComment(this.selectedFavouriteId).subscribe((comment: BookComment[]) => {\n          if (comment.length > 0) {\n            this.hasComment = true;\n            this.comments = comment;\n            console.log(this.comments);\n            //console.log(this.hasComment);\n          } else {\n            this.hasComment = false;\n            //console.log(this.hasComment);\n          }\n\n        })\n\n        this.data.getScore(this.selectedFavouriteId).subscribe((score: BookScore[]) => {\n          if (score.length > 0) {\n            this.hasScore = true;\n            this.scores = score;\n            console.log(this.scores);\n            //console.log(this.hasComment);\n          } else {\n            this.hasScore = false;\n            //console.log(this.hasComment);\n          }\n\n        })\n\n      }\n    )\n\n\n  }\n\n  deleteFavourite(favouriteId: string) {\n    this.data.deleteFavourite(favouriteId).subscribe((res: any) => {\n      console.log(res);\n      this.router.navigate(['/favouriteView']);\n    });\n  }\n\n  deleteComment(commentId: string) {\n    console.log(commentId);\n    console.log(this.selectedFavouriteId);\n    this.data.deleteComment(this.selectedFavouriteId, commentId).subscribe((res: any) => {\n      this.comments = this.comments.filter(val => val._id !== commentId);\n      this.hasComment = false;\n      console.log(res);\n    });\n\n  }\n\n  deleteScore(bookScoreId: string) {\n    console.log(bookScoreId);\n    console.log(this.selectedFavouriteId);\n    this.data.deleteScore(this.selectedFavouriteId, bookScoreId).subscribe((res: any) => {\n      this.scores = this.scores.filter(val => val._id !== bookScoreId);\n      this.hasScore = false;\n      console.log(res);\n    });\n\n  }\n\n\n\n\n}\n","<p>favourite-view works!</p>\n<div>\n    <ul *ngIf=\"favourites\">\n        <li *ngFor=\"let favourite of favourites; index as i\">\n            <h3>{{ favourite.title }}\n                .....\n                <button (click)=\"deleteFavourite(favourite._id)\">\n                    Delete\n                </button>\n\n            </h3>\n            <p>{{ favourite.description }}</p>\n            <br>\n\n        </li>\n    </ul>\n</div>\n<div>\n    <ul *ngIf=\"!hasScore\">\n\n        <button [routerLink]=\"['./addScore']\">\n            Add Score\n        </button>\n        \n    </ul>\n\n    <br>\n    <ul *ngIf=\"hasScore\">\n        <p>\n            Score :\n        </p>\n        <li *ngFor=\"let score of scores; index as i\">\n            <h3>{{ score.score }}\n                <br>\n                <button [routerLink]=\"['./editScore', score._id]\">\n                    Edit\n                </button>\n                .....\n                <button (click)=\"deleteScore(score._id)\">\n                    Delete\n                </button>\n\n            </h3>\n\n\n        </li>\n    </ul>\n    <br>\n    <ul *ngIf=\"!hasComment\">\n\n        <button [routerLink]=\"['./addComment']\">\n            Add Comment\n        </button>\n        \n    </ul>\n    <ul *ngIf=\"hasComment\">\n        <p>\n            Comment :\n        </p>\n        <li *ngFor=\"let comment of comments; index as i\">\n            <h3>{{ comment.comment }}\n                <br>\n                <button [routerLink]=\"['./editComment', comment._id]\">\n                    Edit\n                </button>\n                .....\n                <button (click)=\"deleteComment(comment._id)\">\n                    Delete\n                </button>\n\n            </h3>\n\n\n        </li>\n    </ul>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Params, Router} from '@angular/router';\nimport { Favourite } from 'src/app/models/favourite.model'\n\n@Component({\n  selector: 'app-favourite-view',\n  templateUrl: './favourite-view.component.html',\n  styleUrls: ['./favourite-view.component.scss']\n})\nexport class FavouriteViewComponent implements OnInit {\n\n  favourites: Favourite[];\n  selectedFavouriteId: string;\n\n\n  constructor(private data: DataService, private route:ActivatedRoute, private router: Router) { }\n\n  favouriteId: string\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n          this.favouriteId = params._id;   \n          console.log(params._id);\n      }\n    )\n\n    this.data.getFavourite().subscribe((favourite: Favourite[]) => {\n      this.favourites = favourite;\n\n    })\n  }\n\n\n\n\n}\n","<p>favourite-view works!</p>\n<div>\n    <ul *ngIf=\"favourites\">\n        <li *ngFor=\"let favourite of favourites; index as i\">\n            <h3>{{ favourite.title }}\n                <button [routerLink]=\"['/favouriteView', favourite._id]\">\n                    View \n                </button>\n                \n            </h3>\n            <br>\n            <br>\n        </li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthenticateService } from 'src/app/authenticate.service';\nimport { NavComponent } from '../nav/nav.component';\nimport { NavbarService } from '../navbar.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  isLoggedIn = false;\n\n  constructor(private authenticateService: AuthenticateService, private router: Router, private navbarService: NavbarService) { \n    this.navbarService.getLoginStatus().subscribe(status => this.isLoggedIn = status);\n  }\n\n  ngOnInit(): void {\n  }\n\n  loginAccount(email:string, password:string){\n    this.authenticateService.login(email, password).subscribe((res: HttpResponse<any>) => {\n\n      if(res.status === 200){\n        this.navbarService.updateLoginStatus(true);\n        this.navbarService.clearAllItems();\n        this.router.navigate(['/']);\n\n      }\n      console.log(res);\n    });\n\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"white-box\">\n\n        <h1 class=\"title has-text-primary\">Login</h1>\n\n        <div class=\"field\">\n            <p class=\"control has-icons-left has-icons-right\">\n              <input #emailInput class=\"input has-background-light\" type=\"email\" placeholder=\"Email\">\n              <span class=\"icon is-small is-left\">\n                <i class=\"fas fa-envelope\"></i>\n              </span>\n              \n            </p>\n          </div>\n          <div class=\"field\">\n            <p class=\"control has-icons-left\">\n              <input #passwordInput class=\"input has-background-light\" type=\"password\" placeholder=\"Password\">\n              <span class=\"icon is-small is-left\">\n                <i class=\"fas fa-lock\"></i>\n              </span>\n            </p>\n          </div>\n          <div class=\"field\" style=\"display: flex; justify-content: flex-end;\">\n            <p class=\"control\">\n              <button class=\"button is-success has-text-white\" (click)=\"loginAccount(emailInput.value, passwordInput.value)\">\n                Login\n              </button>\n            </p>\n          </div>\n      \n          <br>\n          <br>\n      \n          <p class=\"has-text-grey\">Not got an account? <a routerLink=\"/register\">Register</a> now!</p>\n      \n        </div>\n      </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticateService } from 'src/app/authenticate.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\n\n\nexport class NavComponent implements OnInit {\n  appTitle = 'Bookshop';\n  hasLogin = false;\n  authenticate: AuthenticateService;\n\n  constructor(private authenticateService: AuthenticateService, private router: Router) {\n    this.authenticate = authenticateService;\n  }\n\n  ngOnInit() {\n    if (this.authenticate.hasLogin()) {\n      this.hasLogin = true;\n      console.log(this.hasLogin);\n    } else {\n      this.hasLogin = false;\n      console.log(this.hasLogin);\n    }\n\n  }\n\n  ngOnChanges() {\n    this.hasLogin = true;\n    console.log(this.hasLogin);\n  }\n\n  login() {\n    \n    this.router.navigate(['/login']);\n  }\n\n  logout() {\n    this.hasLogin = false;\n    console.log(this.hasLogin);\n    this.authenticate.logout();\n  }\n\n}\n\n","<header>\n\n    <nav class=\"breadcrumb is-centered\" aria-label=\"breadcrumbs\">\n        <ul *ngIf=\"hasLogin\">\n            <li><a routerLink=\"/\">Home</a></li>\n            <li><a routerLink=\"/favouriteView\">My Favourites</a></li>\n            <li><a (click)=\"logout()\">logout</a></li>\n        </ul>\n        <ul *ngIf=\"!hasLogin\">\n            <li><a routerLink=\"/\">Home</a></li>\n            <li><a (click)=\"login()\">Login</a></li>\n        </ul>\n      </nav>\n</header>","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class NavbarService {\n \n  private links = new Array<{ text: string, path: string }>();\n  private isLoggedIn = new Subject<boolean>();\n \n  constructor() {\n    this.addItem({ text: 'Login', path: 'login' });\n    this.isLoggedIn.next(false);\n  }\n \n  getLinks() {\n    return this.links;\n  }\n \n  getLoginStatus() {\n    return this.isLoggedIn;\n  }\n \n  updateLoginStatus(status: boolean) {\n    this.isLoggedIn.next(status);\n \n    if (!status) {\n      this.clearAllItems();\n      this.addItem({ text: 'Login', path: 'login' });\n    }\n  }\n \n \n  addItem({ text, path }) {\n    this.links.push({ text: text, path: path });\n  }\n \n  removeItem({ text }) {\n    this.links.forEach((link, index) => {\n      if (link.text === text) {\n        this.links.splice(index, 1);\n      }\n    });\n  }\n \n  clearAllItems() {\n    this.links.length = 0;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthenticateService } from 'src/app/authenticate.service';\nimport { NavbarService } from '../navbar.service';\n\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(private authenticateService: AuthenticateService, private router: Router, private navbarService: NavbarService) { }\n\n  ngOnInit() {\n  }\n\n  registerAccount(email: string, password: string) {\n    this.authenticateService.register(email, password).subscribe((res: HttpResponse<any>) => {\n      console.log(res);\n      this.navbarService.updateLoginStatus(true);\n      this.navbarService.clearAllItems();\n      this.router.navigate(['/bookSearch']);\n    });\n  }\n\n}","<div class=\"centered-content\">\n    <div class=\"white-box\">\n  \n      <h1 class=\"title has-text-primary\">Registration</h1>\n      \n      <div class=\"field\">\n        <p class=\"control has-icons-left has-icons-right\">\n          <input #emailInput class=\"input has-background-light\" type=\"email\" placeholder=\"Email\">\n          <span class=\"icon is-small is-left\">\n            <i class=\"fas fa-envelope\"></i>\n          </span>\n        </p>\n      </div>\n      <div class=\"field\">\n        <p class=\"control has-icons-left\">\n          <input #passwordInput class=\"input has-background-light\" type=\"password\" placeholder=\"Password\">\n          <span class=\"icon is-small is-left\">\n            <i class=\"fas fa-lock\"></i>\n          </span>\n        </p>\n      </div>\n      <div class=\"field\" style=\"display: flex; justify-content: flex-end;\">\n        <p class=\"control\">\n          <button class=\"button is-success has-text-white\" (click)=\"registerAccount(emailInput.value, passwordInput.value)\">\n            Register\n          </button>\n        </p>\n      </div>\n      <br>\n  \n      <p class=\"has-text-grey\">Already got an account? <a routerLink=\"/login\">Login</a> now!</p>\n  \n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, empty, Subject } from 'rxjs';\nimport { AuthenticateService } from './authenticate.service';\nimport { catchError, tap, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebRequestInterceptor implements HttpInterceptor {\n\n  constructor(private authenticateService: AuthenticateService) { }\n\n  refreshingAccessToken: boolean;\n\n  accessTokenRefreshed: Subject<any> = new Subject();\n\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    request = this.addAuthHeader(request);\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n\n        if (error.status === 401) {\n          return this.refreshAccessToken()\n            .pipe(\n              switchMap(() => {\n                request = this.addAuthHeader(request);\n                return next.handle(request);\n              }),\n              catchError((err: any) => {\n                console.log(err);\n                this.authenticateService.logout();\n                return empty();\n              })\n            )\n        }\n\n        return throwError(error);\n      })\n    )\n  }\n\n  refreshAccessToken() {\n    if (this.refreshingAccessToken) {\n      return new Observable(observer => {\n        this.accessTokenRefreshed.subscribe(() => {\n          observer.next();\n          observer.complete();\n        })\n      })\n    } else {\n      this.refreshingAccessToken = true;\n      return this.authenticateService.getNewAccessToken().pipe(\n        tap(() => {\n          console.log(\"Access Token Refreshed!\");\n          this.refreshingAccessToken = false;\n          this.accessTokenRefreshed.next();\n        })\n      )\n    }\n    \n  }\n\n\n  addAuthHeader(request: HttpRequest<any>) {\n    const token = this.authenticateService.getAccessToken();\n\n    if (token) {\n      return request.clone({\n        setHeaders: {\n          'x-access-token': token\n        }\n      })\n    }\n    return request;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebRequestService {\n\n  readonly ROOT_URL;\n\n  constructor(private http: HttpClient) { \n    this.ROOT_URL = 'https://book-back-end-assignment.herokuapp.com';\n  }\n\n  login(email: string, password: string){\n    return this.http.post(`${this.ROOT_URL}/users/login`, {\n      email,\n      password\n    }, {\n      observe: 'response'\n    });\n  }\n  \n  register(email: string, password: string) {\n    return this.http.post(`${this.ROOT_URL}/users`, {\n      email,\n      password\n    }, {\n        observe: 'response'\n      });\n  }\n\n  get(uri: string){\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  post(uri: string, payload: Object){\n    //console.log(payload);\n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n  }\n\n  getFavoutite(uri: string){\n    //console.log(uri);\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  deleteFavoutite(uri: string){\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n\n  addComment(uri: string, payload: Object){\n    //console.log(payload);\n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n  }\n  getComment(uri: string){\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  deleteComment(uri: string){\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n  updateComment(uri: string, payload: Object){\n    return this.http.put(`${this.ROOT_URL}/${uri}`, payload);\n  }\n  \n  addScore(uri: string, payload: Object){\n    //console.log(payload);\n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n  }\n  getScore(uri: string){\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  deleteScore(uri: string){\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n  updateScore(uri: string, payload: Object){\n    return this.http.put(`${this.ROOT_URL}/${uri}`, payload);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}