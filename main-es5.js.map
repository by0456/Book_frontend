{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-comment/add-comment.component.ts","webpack:///src/app/add-comment/add-comment.component.html","webpack:///src/app/add-score/add-score.component.ts","webpack:///src/app/add-score/add-score.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authenticate.service.ts","webpack:///src/app/book-search/book-search.component.ts","webpack:///src/app/book-search/book-search.component.html","webpack:///src/app/data.service.ts","webpack:///src/app/edit-comment/edit-comment.component.ts","webpack:///src/app/edit-comment/edit-comment.component.html","webpack:///src/app/edit-score/edit-score.component.ts","webpack:///src/app/edit-score/edit-score.component.html","webpack:///src/app/favourite-details/favourite-details.component.ts","webpack:///src/app/favourite-details/favourite-details.component.html","webpack:///src/app/favourite-view/favourite-view.component.ts","webpack:///src/app/favourite-view/favourite-view.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/navbar.service.ts","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/web-request.interceptor.ts","webpack:///src/app/web-request.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddCommentComponent","data","route","router","params","subscribe","favouriteId","console","log","comment","addComment","newBookComment","navigate","relativeTo","selector","templateUrl","styleUrls","AddScoreComponent","score","addScore","newBookScore","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","authenticateService","navbarService","title","isLoggedIn","config","unshift","links","getLinks","getLoginStatus","status","updateLoginStatus","logoutOnClick","AppModule","provide","useClass","multi","declarations","entryComponents","providers","bootstrap","AuthenticateService","webRequestService","http","email","password","login","pipe","res","setSession","body","_id","headers","get","removeSession","localStorage","getItem","accessToken","setItem","userId","refreshToken","removeItem","ROOT_URL","getRefreshToken","getUserId","observe","setAccessToken","register","providedIn","BookSearchComponent","newSearch","books","bid","description","addFavourite","favourite","addSearch","DataService","post","getFavoutite","deleteFavoutite","getComment","commentId","deleteComment","updateComment","getScore","bookScoreId","deleteScore","updateScore","EditCommentComponent","EditScoreComponent","FavouriteDetailsComponent","hasComment","hasScore","selectedFavouriteId","getFavouriteDetails","favourites","length","comments","scores","deleteFavourite","filter","val","FavouriteViewComponent","getFavourite","LoginComponent","clearAllItems","loginAccount","NavComponent","appTitle","hasLogin","authenticate","logout","NavbarService","Array","addItem","text","next","push","forEach","link","index","splice","RegistrationComponent","registerAccount","WebRequestInterceptor","accessTokenRefreshed","request","addAuthHeader","handle","error","refreshAccessToken","err","refreshingAccessToken","observer","complete","getNewAccessToken","token","getAccessToken","clone","setHeaders","WebRequestService","uri","payload","put","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Params, Router} from '@angular/router';\nimport { Favourite } from 'src/app/models/favourite.model';\nimport { BookComment } from 'src/app/models/bookComment.model';\n\n@Component({\n  selector: 'app-add-comment',\n  templateUrl: './add-comment.component.html',\n  styleUrls: ['./add-comment.component.scss']\n})\nexport class AddCommentComponent implements OnInit {\n  favouriteId: string;\n\n  constructor(private data: DataService, private route: ActivatedRoute, private router: Router) { }\n\n  \n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.favouriteId = params.favouriteId;\n      }\n    )\n    console.log(this.favouriteId);\n  }\n\n  addComment(comment: string){\n\n    this.data.addComment(comment, this.favouriteId).subscribe((newBookComment: BookComment) => {\n      console.log(newBookComment);\n      this.router.navigate(['../'], { relativeTo: this.route});\n\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Add Comment\n\n        </h1>\n\n        <input #CommentInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter comment...\">\n\n        <br><br>\n\n        <div class=\"buttons is-right\" >\n            \n            <button class=\"button is-medium\" [routerLink]=\"['/favouriteView', favouriteId]\">Cancel</button>\n            <button class=\"button is-primary has-text-white is-medium\" (click)=\"addComment(CommentInput.value)\">Add</button>\n\n        </div>\n\n        \n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Params, Router} from '@angular/router';\nimport { Favourite } from 'src/app/models/favourite.model';\nimport { BookScore } from 'src/app/models/bookScore.model';\n\n@Component({\n  selector: 'app-add-score',\n  templateUrl: './add-score.component.html',\n  styleUrls: ['./add-score.component.scss']\n})\nexport class AddScoreComponent implements OnInit {\n\n  favouriteId: string;\n\n  constructor(private data: DataService, private route: ActivatedRoute, private router: Router) { }\n\n  \n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.favouriteId = params.favouriteId;\n      }\n    )\n    console.log(this.favouriteId);\n  }\n\n  addScore(score: number){\n\n    this.data.addScore(score, this.favouriteId).subscribe((newBookScore: BookScore) => {\n      console.log(newBookScore);\n      this.router.navigate(['../'], { relativeTo: this.route});\n\n    })\n  }\n\n}","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Add Score\n\n        </h1>\n\n        <div class=\"field\">\n            <div class=\"control\">\n              <div class=\"select is-large \">\n                <select #ScoreInput >\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                </select>\n              </div>\n            </div>\n          </div>\n   \n\n        <br><br>\n\n        <div class=\"buttons is-right\" >\n            \n            <button class=\"button is-medium\" >Cancel</button>\n            <button class=\"button is-primary has-text-white is-medium\" (click)=\"addScore(ScoreInput.value)\">Add</button>\n\n        </div>\n\n        \n\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookSearchComponent} from './book-search/book-search.component';\nimport { FavouriteViewComponent} from './favourite-view/favourite-view.component';\nimport { FavouriteDetailsComponent} from './favourite-details/favourite-details.component';\nimport { AddCommentComponent} from './add-comment/add-comment.component';\nimport { EditCommentComponent} from './edit-comment/edit-comment.component';\nimport { AddScoreComponent} from './add-score/add-score.component';\nimport { EditScoreComponent} from './edit-score/edit-score.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { WebRequestInterceptor } from './web-request.interceptor';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/bookSearch', pathMatch: 'full' },\n  { path: 'bookSearch', component:BookSearchComponent },\n  { path: 'favouriteView', component:FavouriteViewComponent },\n  { path: 'favouriteView/:favouriteId', component:FavouriteDetailsComponent },\n  { path: 'favouriteView/:favouriteId/addComment', component:AddCommentComponent },\n  { path: 'favouriteView/:favouriteId/editComment/:commentId', component:EditCommentComponent},\n  { path: 'favouriteView/:favouriteId/addScore', component:AddScoreComponent },\n  { path: 'favouriteView/:favouriteId/editScore/:bookScoreId', component:EditScoreComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component: RegistrationComponent},\n  \n \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FavouriteViewComponent } from './favourite-view/favourite-view.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavbarService } from './navbar.service';\nimport { AuthenticateService } from 'src/app/authenticate.service';\n \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'bookFrontEnd';\n\n  links: Array<{ text: string, path: string }>;\n  isLoggedIn = false;\n \n  constructor(private authenticateService: AuthenticateService, private router: Router, private navbarService: NavbarService) {\n    this.router.config.unshift(\n      { path: 'login', component: LoginComponent },\n      { path: 'favouriteView', component: FavouriteViewComponent },\n    );\n  }\n \n  ngOnInit() {\n    this.links = this.navbarService.getLinks();\n    this.navbarService.getLoginStatus().subscribe(status => this.isLoggedIn = status);\n  }\n \n  logout() {\n    this.navbarService.updateLoginStatus(false);\n    this.authenticateService.logoutOnClick();\n  }\n}\n"," <header>\n\n    <nav class=\"breadcrumb is-centered\" aria-label=\"breadcrumbs\">\n        <ul routerLinkActive=\"active\">\n            <li ><a class=\"nav-link\" routerLink=\"/\">Home</a></li>\n            <li  *ngFor=\"let link of links\">\n              <a [routerLink]=\"link.path\">{{ link.text }}</a>\n            </li>\n            <li *ngIf=\"isLoggedIn\">\n              <a routerLink=\"/favouriteView\">My Favourite</a>\n              <a (click)=\"logout()\">Logout</a>\n            </li>\n          </ul>\n      </nav>\n  </header>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BookSearchComponent } from './book-search/book-search.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FavouriteViewComponent } from './favourite-view/favourite-view.component';\nimport { FavouriteDetailsComponent } from './favourite-details/favourite-details.component';\nimport { AddCommentComponent } from './add-comment/add-comment.component';\nimport { EditCommentComponent } from './edit-comment/edit-comment.component';\nimport { AddScoreComponent } from './add-score/add-score.component';\nimport { EditScoreComponent } from './edit-score/edit-score.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { WebRequestInterceptor } from './web-request.interceptor';\nimport { NavComponent } from './nav/nav.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookSearchComponent,\n    FavouriteViewComponent,\n    FavouriteDetailsComponent,\n    AddCommentComponent,\n    EditCommentComponent,\n    AddScoreComponent,\n    EditScoreComponent,\n    LoginComponent,\n    RegistrationComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  entryComponents: [\n    LoginComponent,\n    FavouriteViewComponent\n  ],\n  providers: [ \n    { provide: HTTP_INTERCEPTORS, useClass: WebRequestInterceptor, multi: true }\n   ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { WebRequestService } from './web-request.service';\nimport { Router } from '@angular/router';\nimport { shareReplay, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n\n  constructor(private webRequestService: WebRequestService, private router: Router, private http: HttpClient) { }\n\n  login(email: string, password: string) {\n    return this.webRequestService.login(email, password).pipe(\n      shareReplay(),\n      tap((res: HttpResponse<any>) => {\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\n        console.log(\"LOGGED IN!\");\n        //this.router.navigate(['/']);\n      })\n    )\n  }\n\n  logout() {\n    this.removeSession();\n\n    this.router.navigate(['/login']);\n  }\n\n  logoutOnClick(){\n    this.removeSession();\n\n    this.router.navigate(['/']);\n  }\n\n  getUserId() {\n    return localStorage.getItem('user-id');\n  }\n\n  hasLogin(){\n    if(localStorage.getItem('user-id')){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n\n  getRefreshToken() {\n    return localStorage.getItem('x-refresh-token');\n  }\n\n  getAccessToken() {\n    return localStorage.getItem('x-access-token');\n  }\n\n\n  setAccessToken(accessToken: string) {\n    localStorage.setItem('x-access-token', accessToken)\n  }\n\n  private setSession(userId: string, accessToken: string, refreshToken: string) {\n    localStorage.setItem('user-id', userId);\n    localStorage.setItem('x-access-token', accessToken);\n    localStorage.setItem('x-refresh-token', refreshToken);\n  }\n\n  private removeSession() {\n    localStorage.removeItem('user-id');\n    localStorage.removeItem('x-access-token');\n    localStorage.removeItem('x-refresh-token');\n  }\n\n  getNewAccessToken() {\n    return this.http.get(`${this.webRequestService.ROOT_URL}/users/me/access-token`, {\n      headers: {\n        'x-refresh-token': this.getRefreshToken(),\n        '_id': this.getUserId()\n      },\n      observe: 'response'\n    }).pipe(\n      tap((res: HttpResponse<any>) => {\n        this.setAccessToken(res.headers.get('x-access-token'));\n      })\n    )\n  }\n\n  register(email: string, password: string) {\n    return this.webRequestService.register(email, password).pipe(\n      shareReplay(),\n      tap((res: HttpResponse<any>) => {\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\n        console.log(\"Successfully signed up and now logged in!\");\n      })\n    )\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Params, Router} from '@angular/router';\nimport { Favourite } from 'src/app/models/favourite.model';\n\n@Component({\n  selector: 'app-book-search',\n  templateUrl: './book-search.component.html',\n  styleUrls: ['./book-search.component.scss']\n})\nexport class BookSearchComponent implements OnInit {\n  favourite: Favourite[];\n\n  books: Object;\n\n  constructor(private data: DataService, private route:ActivatedRoute, private router: Router) { }\n  \n  ngOnInit(): void {\n    \n  }\n\n  addSearch(newSearch: string) {\n    if (newSearch != '') {\n      this.data.get(`${newSearch}`).subscribe(data => {\n\n        this.books = data;\n      })\n    }\n  }\n\n  addFavourite(bid: string, title: string, description: string){\n    //console.log(bid+\", \"+title+\", \"+authors+\", \"+description);\n    this.data.addFavourite(bid, title, description).subscribe((favourite: Favourite) => {\n      console.log(favourite);\n    });\n  }\n\n  \n\n}\n","<p>book-search works!</p>\n<div>\n    <input #newSearch (keyup.enter)=\"addSearch(newSearch.value)\"\n        (blur)=\"addSearch(newSearch.value); newSearch.value='' \">\n\n    <button (click)=\"addSearch(newSearch.value)\">Search</button>\n    <ul *ngIf=\"books\">\n        <li *ngFor=\"let book of books; index as i\">\n            <h3>{{ book.title }} <button (click)=\"addFavourite(book.id, book.title, book.description)\"> Add to Favourites</button></h3>\n            <p>{{ book.description}} </p>\n            <br>\n            <br>\n            <br>\n        </li>\n    </ul>\n</div>","import { Injectable } from '@angular/core';\n\nimport { WebRequestService } from './web-request.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private webRequestService:WebRequestService) { }\n\n\n  get(title: string) {\n    return this.webRequestService.get(`bookSearch?q=${title}`);\n  }\n\n  addFavourite(bid:string, title:string, description:string) {\n\n    return this.webRequestService.post(`favourite`, {bid, title, description});\n  }\n\n  getFavourite(){\n    return this.webRequestService.getFavoutite(`favourite`);\n  }\n\n  getFavouriteDetails(id: string){\n    return this.webRequestService.getFavoutite(`favourite/${id}`);\n  }\n\n  deleteFavourite(id: string){\n    return this.webRequestService.deleteFavoutite(`favourite/${id}`);\n  }\n\n  addComment(comment: string, id: string){\n    return this.webRequestService.addComment(`favourite/${id}/comment`, {comment});\n  }\n\n  getComment(id: string){\n    return this.webRequestService.getComment(`favourite/${id}/comment`);\n  }\n\n  deleteComment(id: string, commentId: string){\n    return this.webRequestService.deleteComment(`favourite/${id}/comment/${commentId}`);\n  }\n\n  updateComment(id: string, commentId: string, comment: string){\n    return this.webRequestService.updateComment(`favourite/${id}/comment/${commentId}`, {comment});\n  }\n\n  addScore(score: number, id: string){\n    return this.webRequestService.addScore(`favourite/${id}/bookScore`, {score});\n  }\n\n  getScore(id: string){\n    return this.webRequestService.getScore(`favourite/${id}/bookScore`);\n  }\n\n  deleteScore(id: string, bookScoreId: string){\n    return this.webRequestService.deleteScore(`favourite/${id}/bookScore/${bookScoreId}`);\n  }\n\n  updateScore(id: string, bookScoreId: string, score: number){\n    return this.webRequestService.updateScore(`favourite/${id}/bookScore/${bookScoreId}`, {score});\n  }\n\n  \n\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-edit-comment',\n  templateUrl: './edit-comment.component.html',\n  styleUrls: ['./edit-comment.component.scss']\n})\nexport class EditCommentComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private data: DataService, private router: Router) { }\n\n  favouriteId: string;\n  commentId: string;\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n          this.favouriteId = params.favouriteId;  \n          this.commentId = params.commentId; \n      }\n    )\n  }\n\n  updateComment(comment: string){\n\n    console.log(this.favouriteId);\n    console.log(this.commentId);\n    console.log(comment);\n\n    this.data.updateComment(this.favouriteId, this.commentId, comment).subscribe(() => {\n      this.router.navigate(['/favouriteView', this.favouriteId]);\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Edit Comment\n\n        </h1>\n\n        <input #CommentInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter comment...\">\n\n        <br><br>\n\n        <div class=\"buttons is-right\" >\n            \n            <button class=\"button is-medium\" [routerLink]=\"['/favouriteView', favouriteId]\">Cancel</button>\n            <button class=\"button is-primary has-text-white is-medium\" (click)=\"updateComment(CommentInput.value)\">Edit</button>\n\n        </div>\n\n        \n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-edit-score',\n  templateUrl: './edit-score.component.html',\n  styleUrls: ['./edit-score.component.scss']\n})\nexport class EditScoreComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private data: DataService, private router: Router) { }\n\n  favouriteId: string;\n  bookScoreId: string;\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n          this.favouriteId = params.favouriteId;  \n          this.bookScoreId = params.bookScoreId; \n      }\n    )\n  }\n\n  updateScore(score: number){\n\n    console.log(this.favouriteId);\n    console.log(this.bookScoreId);\n    console.log(score);\n\n    this.data.updateScore(this.favouriteId, this.bookScoreId, score).subscribe(() => {\n      this.router.navigate(['/favouriteView', this.favouriteId]);\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Edit Score\n\n        </h1>\n\n        <div class=\"field\">\n            <div class=\"control\">\n              <div class=\"select is-large \">\n                <select #ScoreInput >\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                </select>\n              </div>\n            </div>\n          </div>\n   \n\n        <br><br>\n\n        <div class=\"buttons is-right\" >\n            \n            <button class=\"button is-medium\" [routerLink]=\"['/favouriteView', favouriteId]\">Cancel</button>\n            <button class=\"button is-primary has-text-white is-medium\" (click)=\"updateScore(ScoreInput.value)\">Update</button>\n\n        </div>\n\n        \n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Favourite } from 'src/app/models/favourite.model';\nimport { BookComment } from 'src/app/models/bookComment.model';\nimport { BookScore } from 'src/app/models/bookScore.model';\n\n@Component({\n  selector: 'app-favourite-details',\n  templateUrl: './favourite-details.component.html',\n  styleUrls: ['./favourite-details.component.scss']\n})\nexport class FavouriteDetailsComponent implements OnInit {\n\n  favourites: Favourite[];\n  selectedFavouriteId: string;\n  comments: BookComment[];\n  scores: BookScore[];\n  hasComment: boolean;\n  hasScore: boolean;\n\n\n  constructor(private data: DataService, private route: ActivatedRoute, private router: Router) { }\n\n  favouriteId: string\n\n\n  ngOnInit(): void {\n    this.hasComment = false;\n    this.hasScore = false;\n    this.route.params.subscribe(\n      (params: Params) => {\n\n        this.selectedFavouriteId = params.favouriteId;\n        console.log(this.selectedFavouriteId);\n        this.data.getFavouriteDetails(this.selectedFavouriteId).subscribe((favourite: Favourite[]) => {\n          this.favourites = favourite;\n          console.log(this.favourites);\n        })\n\n        this.data.getComment(this.selectedFavouriteId).subscribe((comment: BookComment[]) => {\n          if (comment.length > 0) {\n            this.hasComment = true;\n            this.comments = comment;\n            console.log(this.comments);\n            //console.log(this.hasComment);\n          } else {\n            this.hasComment = false;\n            //console.log(this.hasComment);\n          }\n\n        })\n\n        this.data.getScore(this.selectedFavouriteId).subscribe((score: BookScore[]) => {\n          if (score.length > 0) {\n            this.hasScore = true;\n            this.scores = score;\n            console.log(this.scores);\n            //console.log(this.hasComment);\n          } else {\n            this.hasScore = false;\n            //console.log(this.hasComment);\n          }\n\n        })\n\n      }\n    )\n\n\n  }\n\n  deleteFavourite(favouriteId: string) {\n    this.data.deleteFavourite(favouriteId).subscribe((res: any) => {\n      console.log(res);\n      this.router.navigate(['/favouriteView']);\n    });\n  }\n\n  deleteComment(commentId: string) {\n    console.log(commentId);\n    console.log(this.selectedFavouriteId);\n    this.data.deleteComment(this.selectedFavouriteId, commentId).subscribe((res: any) => {\n      this.comments = this.comments.filter(val => val._id !== commentId);\n      this.hasComment = false;\n      console.log(res);\n    });\n\n  }\n\n  deleteScore(bookScoreId: string) {\n    console.log(bookScoreId);\n    console.log(this.selectedFavouriteId);\n    this.data.deleteScore(this.selectedFavouriteId, bookScoreId).subscribe((res: any) => {\n      this.scores = this.scores.filter(val => val._id !== bookScoreId);\n      this.hasScore = false;\n      console.log(res);\n    });\n\n  }\n\n\n\n\n}\n","<p>favourite-view works!</p>\n<div>\n    <ul *ngIf=\"favourites\">\n        <li *ngFor=\"let favourite of favourites; index as i\">\n            <h3>{{ favourite.title }}\n                .....\n                <button (click)=\"deleteFavourite(favourite._id)\">\n                    Delete\n                </button>\n\n            </h3>\n            <p>{{ favourite.description }}</p>\n            <br>\n\n        </li>\n    </ul>\n</div>\n<div>\n    <ul *ngIf=\"!hasScore\">\n\n        <button [routerLink]=\"['./addScore']\">\n            Add Score\n        </button>\n        \n    </ul>\n\n    <br>\n    <ul *ngIf=\"hasScore\">\n        <p>\n            Score :\n        </p>\n        <li *ngFor=\"let score of scores; index as i\">\n            <h3>{{ score.score }}\n                <br>\n                <button [routerLink]=\"['./editScore', score._id]\">\n                    Edit\n                </button>\n                .....\n                <button (click)=\"deleteScore(score._id)\">\n                    Delete\n                </button>\n\n            </h3>\n\n\n        </li>\n    </ul>\n    <br>\n    <ul *ngIf=\"!hasComment\">\n\n        <button [routerLink]=\"['./addComment']\">\n            Add Comment\n        </button>\n        \n    </ul>\n    <ul *ngIf=\"hasComment\">\n        <p>\n            Comment :\n        </p>\n        <li *ngFor=\"let comment of comments; index as i\">\n            <h3>{{ comment.comment }}\n                <br>\n                <button [routerLink]=\"['./editComment', comment._id]\">\n                    Edit\n                </button>\n                .....\n                <button (click)=\"deleteComment(comment._id)\">\n                    Delete\n                </button>\n\n            </h3>\n\n\n        </li>\n    </ul>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Params, Router} from '@angular/router';\nimport { Favourite } from 'src/app/models/favourite.model'\n\n@Component({\n  selector: 'app-favourite-view',\n  templateUrl: './favourite-view.component.html',\n  styleUrls: ['./favourite-view.component.scss']\n})\nexport class FavouriteViewComponent implements OnInit {\n\n  favourites: Favourite[];\n  selectedFavouriteId: string;\n\n\n  constructor(private data: DataService, private route:ActivatedRoute, private router: Router) { }\n\n  favouriteId: string\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n          this.favouriteId = params._id;   \n          console.log(params._id);\n      }\n    )\n\n    this.data.getFavourite().subscribe((favourite: Favourite[]) => {\n      this.favourites = favourite;\n\n    })\n  }\n\n\n\n\n}\n","<p>favourite-view works!</p>\n<div>\n    <ul *ngIf=\"favourites\">\n        <li *ngFor=\"let favourite of favourites; index as i\">\n            <h3>{{ favourite.title }}\n                <button [routerLink]=\"['/favouriteView', favourite._id]\">\n                    View \n                </button>\n                \n            </h3>\n            <br>\n            <br>\n        </li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthenticateService } from 'src/app/authenticate.service';\nimport { NavComponent } from '../nav/nav.component';\nimport { NavbarService } from '../navbar.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  isLoggedIn = false;\n\n  constructor(private authenticateService: AuthenticateService, private router: Router, private navbarService: NavbarService) { \n    this.navbarService.getLoginStatus().subscribe(status => this.isLoggedIn = status);\n  }\n\n  ngOnInit(): void {\n  }\n\n  loginAccount(email:string, password:string){\n    this.authenticateService.login(email, password).subscribe((res: HttpResponse<any>) => {\n\n      if(res.status === 200){\n        this.navbarService.updateLoginStatus(true);\n        this.navbarService.clearAllItems();\n        this.router.navigate(['/']);\n\n      }\n      console.log(res);\n    });\n\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"white-box\">\n\n        <h1 class=\"title has-text-primary\">Login</h1>\n\n        <div class=\"field\">\n            <p class=\"control has-icons-left has-icons-right\">\n              <input #emailInput class=\"input has-background-light\" type=\"email\" placeholder=\"Email\">\n              <span class=\"icon is-small is-left\">\n                <i class=\"fas fa-envelope\"></i>\n              </span>\n              \n            </p>\n          </div>\n          <div class=\"field\">\n            <p class=\"control has-icons-left\">\n              <input #passwordInput class=\"input has-background-light\" type=\"password\" placeholder=\"Password\">\n              <span class=\"icon is-small is-left\">\n                <i class=\"fas fa-lock\"></i>\n              </span>\n            </p>\n          </div>\n          <div class=\"field\" style=\"display: flex; justify-content: flex-end;\">\n            <p class=\"control\">\n              <button class=\"button is-success has-text-white\" (click)=\"loginAccount(emailInput.value, passwordInput.value)\">\n                Login\n              </button>\n            </p>\n          </div>\n      \n          <br>\n          <br>\n      \n          <p class=\"has-text-grey\">Not got an account? <a routerLink=\"/register\">Register</a> now!</p>\n      \n        </div>\n      </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticateService } from 'src/app/authenticate.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\n\n\nexport class NavComponent implements OnInit {\n  appTitle = 'Bookshop';\n  hasLogin = false;\n  authenticate: AuthenticateService;\n\n  constructor(private authenticateService: AuthenticateService, private router: Router) {\n    this.authenticate = authenticateService;\n  }\n\n  ngOnInit() {\n    if (this.authenticate.hasLogin()) {\n      this.hasLogin = true;\n      console.log(this.hasLogin);\n    } else {\n      this.hasLogin = false;\n      console.log(this.hasLogin);\n    }\n\n  }\n\n  ngOnChanges() {\n    this.hasLogin = true;\n    console.log(this.hasLogin);\n  }\n\n  login() {\n    \n    this.router.navigate(['/login']);\n  }\n\n  logout() {\n    this.hasLogin = false;\n    console.log(this.hasLogin);\n    this.authenticate.logout();\n  }\n\n}\n\n","<header>\n\n    <nav class=\"breadcrumb is-centered\" aria-label=\"breadcrumbs\">\n        <ul *ngIf=\"hasLogin\">\n            <li><a routerLink=\"/\">Home</a></li>\n            <li><a routerLink=\"/favouriteView\">My Favourites</a></li>\n            <li><a (click)=\"logout()\">logout</a></li>\n        </ul>\n        <ul *ngIf=\"!hasLogin\">\n            <li><a routerLink=\"/\">Home</a></li>\n            <li><a (click)=\"login()\">Login</a></li>\n        </ul>\n      </nav>\n</header>","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class NavbarService {\n \n  private links = new Array<{ text: string, path: string }>();\n  private isLoggedIn = new Subject<boolean>();\n \n  constructor() {\n    this.addItem({ text: 'Login', path: 'login' });\n    this.isLoggedIn.next(false);\n  }\n \n  getLinks() {\n    return this.links;\n  }\n \n  getLoginStatus() {\n    return this.isLoggedIn;\n  }\n \n  updateLoginStatus(status: boolean) {\n    this.isLoggedIn.next(status);\n \n    if (!status) {\n      this.clearAllItems();\n      this.addItem({ text: 'Login', path: 'login' });\n    }\n  }\n \n \n  addItem({ text, path }) {\n    this.links.push({ text: text, path: path });\n  }\n \n  removeItem({ text }) {\n    this.links.forEach((link, index) => {\n      if (link.text === text) {\n        this.links.splice(index, 1);\n      }\n    });\n  }\n \n  clearAllItems() {\n    this.links.length = 0;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthenticateService } from 'src/app/authenticate.service';\nimport { NavbarService } from '../navbar.service';\n\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(private authenticateService: AuthenticateService, private router: Router, private navbarService: NavbarService) { }\n\n  ngOnInit() {\n  }\n\n  registerAccount(email: string, password: string) {\n    this.authenticateService.register(email, password).subscribe((res: HttpResponse<any>) => {\n      console.log(res);\n      this.navbarService.updateLoginStatus(true);\n      this.navbarService.clearAllItems();\n      this.router.navigate(['/bookSearch']);\n    });\n  }\n\n}","<div class=\"centered-content\">\n    <div class=\"white-box\">\n  \n      <h1 class=\"title has-text-primary\">Registration</h1>\n      \n      <div class=\"field\">\n        <p class=\"control has-icons-left has-icons-right\">\n          <input #emailInput class=\"input has-background-light\" type=\"email\" placeholder=\"Email\">\n          <span class=\"icon is-small is-left\">\n            <i class=\"fas fa-envelope\"></i>\n          </span>\n        </p>\n      </div>\n      <div class=\"field\">\n        <p class=\"control has-icons-left\">\n          <input #passwordInput class=\"input has-background-light\" type=\"password\" placeholder=\"Password\">\n          <span class=\"icon is-small is-left\">\n            <i class=\"fas fa-lock\"></i>\n          </span>\n        </p>\n      </div>\n      <div class=\"field\" style=\"display: flex; justify-content: flex-end;\">\n        <p class=\"control\">\n          <button class=\"button is-success has-text-white\" (click)=\"registerAccount(emailInput.value, passwordInput.value)\">\n            Register\n          </button>\n        </p>\n      </div>\n      <br>\n  \n      <p class=\"has-text-grey\">Already got an account? <a routerLink=\"/login\">Login</a> now!</p>\n  \n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, empty, Subject } from 'rxjs';\nimport { AuthenticateService } from './authenticate.service';\nimport { catchError, tap, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebRequestInterceptor implements HttpInterceptor {\n\n  constructor(private authenticateService: AuthenticateService) { }\n\n  refreshingAccessToken: boolean;\n\n  accessTokenRefreshed: Subject<any> = new Subject();\n\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    request = this.addAuthHeader(request);\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n\n        if (error.status === 401) {\n          return this.refreshAccessToken()\n            .pipe(\n              switchMap(() => {\n                request = this.addAuthHeader(request);\n                return next.handle(request);\n              }),\n              catchError((err: any) => {\n                console.log(err);\n                this.authenticateService.logout();\n                return empty();\n              })\n            )\n        }\n\n        return throwError(error);\n      })\n    )\n  }\n\n  refreshAccessToken() {\n    if (this.refreshingAccessToken) {\n      return new Observable(observer => {\n        this.accessTokenRefreshed.subscribe(() => {\n          observer.next();\n          observer.complete();\n        })\n      })\n    } else {\n      this.refreshingAccessToken = true;\n      return this.authenticateService.getNewAccessToken().pipe(\n        tap(() => {\n          console.log(\"Access Token Refreshed!\");\n          this.refreshingAccessToken = false;\n          this.accessTokenRefreshed.next();\n        })\n      )\n    }\n    \n  }\n\n\n  addAuthHeader(request: HttpRequest<any>) {\n    const token = this.authenticateService.getAccessToken();\n\n    if (token) {\n      return request.clone({\n        setHeaders: {\n          'x-access-token': token\n        }\n      })\n    }\n    return request;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebRequestService {\n\n  readonly ROOT_URL;\n\n  constructor(private http: HttpClient) { \n    this.ROOT_URL = 'https://book-back-end-assignment.herokuapp.com';\n  }\n\n  login(email: string, password: string){\n    return this.http.post(`${this.ROOT_URL}/users/login`, {\n      email,\n      password\n    }, {\n      observe: 'response'\n    });\n  }\n  \n  register(email: string, password: string) {\n    return this.http.post(`${this.ROOT_URL}/users`, {\n      email,\n      password\n    }, {\n        observe: 'response'\n      });\n  }\n\n  get(uri: string){\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  post(uri: string, payload: Object){\n    //console.log(payload);\n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n  }\n\n  getFavoutite(uri: string){\n    //console.log(uri);\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  deleteFavoutite(uri: string){\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n\n  addComment(uri: string, payload: Object){\n    //console.log(payload);\n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n  }\n  getComment(uri: string){\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  deleteComment(uri: string){\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n  updateComment(uri: string, payload: Object){\n    return this.http.put(`${this.ROOT_URL}/${uri}`, payload);\n  }\n  \n  addScore(uri: string, payload: Object){\n    //console.log(payload);\n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n  }\n  getScore(uri: string){\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  deleteScore(uri: string){\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n  updateScore(uri: string, payload: Object){\n    return this.http.put(`${this.ROOT_URL}/${uri}`, payload);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}